MongoDB Specifications
******************


Introduction
============

This output uses the native driver for MongoDB in Scala language. Casbah driver offers all the functionality that
Sparkta need to insert,update and add and configure the database for proper system operation.

In the implementation of a Output on the Sparkta SDK there are two possibilities, one would be allowing the system
to transform our data even DataFrame type Spark or inserted directly a UpdateMetricOperation. This output does not
use any Spark plugin to insert DataFrames.

This plugin create one client connexion per Worker in a Spark Cluster.


Driver Operations
============

When the driver starts the Output, several processes for creating indexes needed to run the various collections.
There are two types of indexes:

  - Unique index:

    Create primary key that contains a field called "id" values separated by "_" and the field timebucket buckets.
    This index is optional, because if you do not specify timebucket not created and the primary key of the collection is "_id" field

  - Text index:

    if we do a text index on any bucket or some aggregate field, the system will create it for us.


Worker Operations
============

As this Output does not use functionality of DataFrames, override the method upsert, that save all values
of a UpdateMetricOperation.
Below you can see each of the features implemented:

  - Each Worker save in one BulkOperation for each data partition of a RDD.

  - The output create one collection for each rollup. With the name "bucket1_bucket2_...." + Optional(timeBucket if
  is specified in properties)

  - The output upsert documents with the _id field "bucket1_bucket2_....". If timeBucket
    is specified in properties the system save the data in two fields "id" with the buckets values and timeBucket
    field with the dateTime of the document. With the second the _id is autogenerated.

  - MongoDB have several update aggregation commands that are used by Sparkta for insert the aggregate fields. As can
   be Sum, Count, Avg, Max, Min.
