.. _examples:

SpaRkTA examples
****************


e-commerce
==========

This example simulates an environment of an e-commerce architecture.
In one hand we have the logs generated by an apache server and in the other the orders requested in the web site.
We'll publish all this events in RabbitMQ (https://www.rabbitmq.com/) and aggregate them with SpaRkTA which will
save the aggregated data in elasticsearch.

Steps

* First we need to start the RabbitMQ server and elasticsearch::

    sudo service rabbitmq-server start

    sudo service elasticsearch start

* Next we run SpaRkTA and send the policy::

    cd /opt/sds/sparkta

    sudo sh bin/run

    curl -H "Content-Type: application/json" http://localhost:9090 --data @examples/ecommerce/ecommerce-policy.json

* And last we need to run the data generators in two different shells::

    cd examples/ecommerce

    mvn -PorderLines clean install benerator:generate

    mvn -PvisitLog clean install benerator:generate


Twitter  example
================

Example to take data in streaming from Twitter and ingesting it in RabbitMQ in order to test the SpaRkTA input.
To access to the Twitter API it is necessary to config the file::

    src/main/resources/twitter4j.properties

Steps

There are two ways of testing it:

* Producing data directly into a RabbitMQ queue

    - Run the RabbitMQ and Mongodb server in local::

        sudo service rabbitmq-server start

        sudo service mongod start

    - Run SpaRkTA and the policy::

        cd /opt/sds/sparkta

        sudo sh bin/run

        curl -H "Content-Type: application/json" http://localhost:9090 --data @examples/twitter-to-rabbit/twitter-policy.json

    - Run the class TwitterToRabbitMQSimple::

        mvn clean package

        mvn exec:java -Dexec.mainClass="com.stratio.examples.twittertorabbit.TwitterToRabbitMQSimple"


* Producing data into a RabbitMQ queue through a direct exchange
  (https://www.rabbitmq.com/tutorials/tutorial-four-java.html)

    - Run the RabbitMQ and Mongodb server in local::

        sudo service rabbitmq-server start

        sudo service mongod start

    - Run SpaRkTA and the policy::

        cd /opt/sds/sparkta

        sudo sh bin/run

        curl -H "Content-Type: application/json" http://localhost:9090 --data @examples/twitter-to-rabbit/twitter-policy.json

    - Run the class TwitterToRabbitMQWithRouting with the routingKey you want to write the data as argument::

        mvn clean package

        mvn exec:java -Dexec.mainClass="com.stratio.examples.twittertorabbit.TwitterToRabbitMQWithRouting"